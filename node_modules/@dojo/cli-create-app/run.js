"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const createDir_1 = require("./createDir");
const npmInstall_1 = require("./npmInstall");
const changeDir_1 = require("./changeDir");
const config_1 = require("./config");
const chalk_1 = require("chalk");
const fs_extra_1 = require("fs-extra");
function default_1(helper, args) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        const appName = args.name;
        const isSkeleton = args.skeleton;
        const isTsx = args.tsx;
        const scripts = {
            dev: 'dojo build --mode dev --watch file --serve',
            build: 'dojo build --mode dist',
            buildDev: `dojo build --mode dev`,
            test: 'dojo test',
            testUnit: 'dojo build --mode unit && dojo test --unit --config local',
            testFunctional: 'dojo build --mode functional && dojo test --functional --config local',
            testAll: 'dojo build --mode unit && dojo build --mode functional && dojo test --all --config local'
        };
        console.info(chalk_1.default.underline(`Creating your new app: ${appName}\n`));
        if (fs_extra_1.existsSync(appName)) {
            return Promise.reject(new Error('App directory already exists'));
        }
        console.info(chalk_1.default.underline('Creating Directories'));
        createDir_1.default(...config_1.getDirectoryNames(appName, isSkeleton, isTsx));
        changeDir_1.default(appName);
        console.info(chalk_1.default.underline('\nCreating Files'));
        helper.command.renderFiles(config_1.getRenderFilesConfig(isSkeleton, isTsx), { appName, scripts });
        console.info(chalk_1.default.underline('\nRunning npm install'));
        yield npmInstall_1.default();
        console.info(chalk_1.default.underline('\nRunning dojo init'));
        yield helper.command.run('init', '');
        console.info(chalk_1.default.green.bold('\nAll done!\n'));
    });
}
exports.default = default_1;
//# sourceMappingURL=run.js.map